{"ast":null,"code":"import { usersAPI } from \"../api/api\";\nconst FOLLOWED = 'FOLLOWED';\nconst UNFOLLOWED = 'UNFOLLOWED';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst SET_IS_FETCHING = 'SET_IS_FETCHING';\nconst SET_FOLLOWING_IN_PROGRESS = 'SET_FOLLOWING_IN_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOWED:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOWED:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: action.users\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SET_TOTAL_USERS_COUNT:\n      return { ...state,\n        totalUsersCount: action.count\n      };\n\n    case SET_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    case SET_FOLLOWING_IN_PROGRESS:\n      return { ...state,\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followSuccess = userId => {\n  return {\n    type: FOLLOWED,\n    userId\n  };\n};\nexport const unfollowSuccess = userId => {\n  return {\n    type: UNFOLLOWED,\n    userId\n  };\n};\nexport const setUsers = users => {\n  return {\n    type: SET_USERS,\n    users\n  };\n};\nexport const setCurrentPage = currentPage => {\n  return {\n    type: SET_CURRENT_PAGE,\n    currentPage\n  };\n};\nexport const setTotalUsersCount = totalUsersCount => {\n  return {\n    type: SET_TOTAL_USERS_COUNT,\n    count: totalUsersCount\n  };\n};\nexport const setIsFetching = isFetching => {\n  return {\n    type: SET_IS_FETCHING,\n    isFetching\n  };\n};\nexport const setFollowingInProgress = (isFetching, userId) => {\n  return {\n    type: SET_FOLLOWING_IN_PROGRESS,\n    isFetching,\n    userId\n  };\n};\nexport const getUsers = (currentPage, pageSize) => {\n  return dispatch => {\n    dispatch(setCurrentPage(currentPage));\n    dispatch(setIsFetching(true));\n    usersAPI.getUsers(currentPage, pageSize).then(data => {\n      dispatch(setUsers(data.items));\n      dispatch(setTotalUsersCount(data.totalCount));\n      dispatch(setIsFetching(false));\n    });\n  };\n};\nexport const follow = userId => {\n  return dispatch => {\n    dispatch(setFollowingInProgress(true, userId));\n    usersAPI.follow(userId).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(followSuccess(userId));\n      }\n\n      dispatch(setFollowingInProgress(false, userId));\n    });\n  };\n};\nexport const unfollow = userId => {\n  return dispatch => {\n    dispatch(setFollowingInProgress(true, userId));\n    usersAPI.unfollow(userId).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(unfollowSuccess(userId));\n      }\n\n      dispatch(setFollowingInProgress(false, userId));\n    });\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["D:/front-end/2021/education_react_redux/react-kabzda-1/src/redux/users_reducer.js"],"names":["usersAPI","FOLLOWED","UNFOLLOWED","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","SET_IS_FETCHING","SET_FOLLOWING_IN_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","map","u","id","userId","followed","count","filter","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","setIsFetching","setFollowingInProgress","getUsers","dispatch","then","data","items","totalCount","follow","resultCode","unfollow"],"mappings":"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","sourcesContent":["import { usersAPI } from \"../api/api\"\r\n\r\nconst FOLLOWED = 'FOLLOWED'\r\nconst UNFOLLOWED = 'UNFOLLOWED'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst SET_IS_FETCHING = 'SET_IS_FETCHING'\r\nconst SET_FOLLOWING_IN_PROGRESS = 'SET_FOLLOWING_IN_PROGRESS'\r\n\r\nlet initialState = {\r\n\tusers: [],\r\n\tpageSize: 10,\r\n\ttotalUsersCount: 0,\r\n\tcurrentPage: 1,\r\n\tisFetching: false,\r\n\tfollowingInProgress: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase FOLLOWED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map(u => {\r\n\t\t\t\t\tif (u.id === action.userId) {\r\n\t\t\t\t\t\treturn { ...u, followed: true }\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn u\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\tcase UNFOLLOWED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map(u => {\r\n\t\t\t\t\tif (u.id === action.userId) {\r\n\t\t\t\t\t\treturn { ...u, followed: false }\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn u\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\tcase SET_USERS:\r\n\t\t\treturn {\r\n\t\t\t\t...state, users: action.users\r\n\t\t\t}\r\n\t\tcase SET_CURRENT_PAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state, currentPage: action.currentPage\r\n\t\t\t}\r\n\t\tcase SET_TOTAL_USERS_COUNT:\r\n\t\t\treturn {\r\n\t\t\t\t...state, totalUsersCount: action.count\r\n\t\t\t}\r\n\t\tcase SET_IS_FETCHING:\r\n\t\t\treturn {\r\n\t\t\t\t...state, isFetching: action.isFetching\r\n\t\t\t}\r\n\t\tcase SET_FOLLOWING_IN_PROGRESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfollowingInProgress: action.isFetching\r\n\t\t\t\t\t? [...state.followingInProgress, action.userId]\r\n\t\t\t\t\t: state.followingInProgress.filter(id => id != action.userId)\r\n\t\t\t}\r\n\t\tdefault: return state\r\n\t}\r\n}\r\n\r\nexport const followSuccess = (userId) => {\r\n\treturn { type: FOLLOWED, userId }\r\n}\r\n\r\nexport const unfollowSuccess = (userId) => {\r\n\treturn { type: UNFOLLOWED, userId }\r\n}\r\n\r\nexport const setUsers = (users) => {\r\n\treturn { type: SET_USERS, users }\r\n}\r\n\r\nexport const setCurrentPage = (currentPage) => {\r\n\treturn { type: SET_CURRENT_PAGE, currentPage }\r\n}\r\n\r\nexport const setTotalUsersCount = (totalUsersCount) => {\r\n\treturn { type: SET_TOTAL_USERS_COUNT, count: totalUsersCount }\r\n}\r\n\r\nexport const setIsFetching = (isFetching) => {\r\n\treturn { type: SET_IS_FETCHING, isFetching }\r\n}\r\n\r\nexport const setFollowingInProgress = (isFetching, userId) => {\r\n\treturn { type: SET_FOLLOWING_IN_PROGRESS, isFetching, userId }\r\n}\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch(setCurrentPage(currentPage))\r\n\t\tdispatch(setIsFetching(true))\r\n\r\n\t\tusersAPI.getUsers(currentPage, pageSize)\r\n\t\t\t.then(data => {\r\n\t\t\t\tdispatch(setUsers(data.items))\r\n\t\t\t\tdispatch(setTotalUsersCount(data.totalCount))\r\n\t\t\t\tdispatch(setIsFetching(false))\r\n\t\t\t})\r\n\t}\r\n}\r\nexport const follow = (userId) => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch(setFollowingInProgress(true, userId))\r\n\t\tusersAPI.follow(userId)\r\n\t\t\t.then(data => {\r\n\t\t\t\tif (data.resultCode === 0) {\r\n\t\t\t\t\tdispatch(followSuccess(userId))\r\n\t\t\t\t}\r\n\t\t\t\tdispatch(setFollowingInProgress(false, userId))\r\n\t\t\t})\r\n\t}\r\n}\r\nexport const unfollow = (userId) => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch(setFollowingInProgress(true, userId))\r\n\t\tusersAPI.unfollow(userId)\r\n\t\t\t.then(data => {\r\n\t\t\t\tif (data.resultCode === 0) {\r\n\t\t\t\t\tdispatch(unfollowSuccess(userId))\r\n\t\t\t\t}\r\n\t\t\t\tdispatch(setFollowingInProgress(false, userId))\r\n\t\t\t})\r\n\t}\r\n}\r\n\r\n\r\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}