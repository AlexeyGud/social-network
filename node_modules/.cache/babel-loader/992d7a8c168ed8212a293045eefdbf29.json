{"ast":null,"code":"const ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE';\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\nlet initialState = {\n  dialogs: [{\n    id: 1,\n    name: 'Dimych'\n  }, {\n    id: 2,\n    name: 'Andrey'\n  }, {\n    id: 3,\n    name: 'Sveta'\n  }, {\n    id: 4,\n    name: 'Sasha'\n  }, {\n    id: 5,\n    name: 'Victor'\n  }, {\n    id: 6,\n    name: 'Valera'\n  }],\n  messages: [{\n    id: 1,\n    message: 'Hi'\n  }, {\n    id: 2,\n    message: 'How is your IT-Kamasutra?'\n  }, {\n    id: 3,\n    message: 'Yo'\n  }, {\n    id: 4,\n    message: 'Yo-Yo'\n  }, {\n    id: 5,\n    message: 'Let\\'s go!'\n  }, {\n    id: 6,\n    message: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Enim, fugit.'\n  }],\n  newMessageText: ''\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_NEW_MESSAGE:\n      {\n        let newMessage = {\n          id: 7,\n          message: state.newMessageText\n        };\n        let stateCopy = { ...state\n        };\n        stateCopy.messages = [...messages];\n        stateCopy.messages.push(newMessage);\n        stateCopy.newMessageText = '';\n        return stateCopy;\n      }\n\n    case UPDATE_NEW_MESSAGE_TEXT:\n      {\n        let stateCopyCopy = { ...state\n        };\n        stateCopy.newMessageText = action.newText;\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addNewMessageActionCreator = () => {\n  return {\n    type: ADD_NEW_MESSAGE\n  };\n};\nexport const updateNewMessageTextActionCreator = text => {\n  return {\n    type: UPDATE_NEW_MESSAGE_TEXT,\n    newText: text\n  };\n};\nexport default dialogsReducer;","map":{"version":3,"sources":["D:/front-end/2021/education_react_redux/react-kabzda-1/src/redux/dialogs_reducer.js"],"names":["ADD_NEW_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","initialState","dialogs","id","name","messages","message","newMessageText","dialogsReducer","state","action","type","newMessage","stateCopy","push","stateCopyCopy","newText","addNewMessageActionCreator","updateNewMessageTextActionCreator","text"],"mappings":"AAAA,MAAMA,eAAe,GAAG,iBAAxB;AACA,MAAMC,uBAAuB,GAAG,yBAAhC;AAEA,IAAIC,YAAY,GAAG;AAClBC,EAAAA,OAAO,EAAE,CACR;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GADQ,EAER;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAFQ,EAGR;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAHQ,EAIR;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAJQ,EAKR;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GALQ,EAMR;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GANQ,CADS;AASlBC,EAAAA,QAAQ,EAAE,CACT;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE;AAAlB,GADS,EAET;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE;AAAlB,GAFS,EAGT;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE;AAAlB,GAHS,EAIT;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE;AAAlB,GAJS,EAKT;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE;AAAlB,GALS,EAMT;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE;AAAlB,GANS,CATQ;AAiBlBC,EAAAA,cAAc,EAAE;AAjBE,CAAnB;;AAoBA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAExD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKZ,eAAL;AAAsB;AACrB,YAAIa,UAAU,GAAG;AAChBT,UAAAA,EAAE,EAAE,CADY;AAEhBG,UAAAA,OAAO,EAAEG,KAAK,CAACF;AAFC,SAAjB;AAKA,YAAIM,SAAS,GAAG,EAAE,GAAGJ;AAAL,SAAhB;AACAI,QAAAA,SAAS,CAACR,QAAV,GAAqB,CAAC,GAAGA,QAAJ,CAArB;AAEAQ,QAAAA,SAAS,CAACR,QAAV,CAAmBS,IAAnB,CAAwBF,UAAxB;AACAC,QAAAA,SAAS,CAACN,cAAV,GAA2B,EAA3B;AACA,eAAOM,SAAP;AACA;;AACD,SAAKb,uBAAL;AAA8B;AAC7B,YAAIe,aAAa,GAAG,EAAE,GAAGN;AAAL,SAApB;AACAI,QAAAA,SAAS,CAACN,cAAV,GAA2BG,MAAM,CAACM,OAAlC;AACA,eAAOH,SAAP;AACA;;AACD;AAAS,aAAOJ,KAAP;AAnBV;AAqBA,CAvBD;;AAwBA,OAAO,MAAMQ,0BAA0B,GAAG,MAAM;AAC/C,SAAO;AAAEN,IAAAA,IAAI,EAAEZ;AAAR,GAAP;AACA,CAFM;AAIP,OAAO,MAAMmB,iCAAiC,GAAIC,IAAD,IAAU;AAC1D,SAAO;AACNR,IAAAA,IAAI,EAAEX,uBADA;AACyBgB,IAAAA,OAAO,EAAEG;AADlC,GAAP;AAGA,CAJM;AAMP,eAAeX,cAAf","sourcesContent":["const ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE'\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT'\r\n\r\nlet initialState = {\r\n\tdialogs: [\r\n\t\t{ id: 1, name: 'Dimych' },\r\n\t\t{ id: 2, name: 'Andrey' },\r\n\t\t{ id: 3, name: 'Sveta' },\r\n\t\t{ id: 4, name: 'Sasha' },\r\n\t\t{ id: 5, name: 'Victor' },\r\n\t\t{ id: 6, name: 'Valera' },\r\n\t],\r\n\tmessages: [\r\n\t\t{ id: 1, message: 'Hi' },\r\n\t\t{ id: 2, message: 'How is your IT-Kamasutra?' },\r\n\t\t{ id: 3, message: 'Yo' },\r\n\t\t{ id: 4, message: 'Yo-Yo' },\r\n\t\t{ id: 5, message: 'Let\\'s go!' },\r\n\t\t{ id: 6, message: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Enim, fugit.' },\r\n\t],\r\n\tnewMessageText: ''\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase ADD_NEW_MESSAGE: {\r\n\t\t\tlet newMessage = {\r\n\t\t\t\tid: 7,\r\n\t\t\t\tmessage: state.newMessageText,\r\n\t\t\t};\r\n\r\n\t\t\tlet stateCopy = { ...state }\r\n\t\t\tstateCopy.messages = [...messages]\r\n\r\n\t\t\tstateCopy.messages.push(newMessage);\r\n\t\t\tstateCopy.newMessageText = '';\r\n\t\t\treturn stateCopy;\r\n\t\t}\r\n\t\tcase UPDATE_NEW_MESSAGE_TEXT: {\r\n\t\t\tlet stateCopyCopy = { ...state }\r\n\t\t\tstateCopy.newMessageText = action.newText;\r\n\t\t\treturn stateCopy;\r\n\t\t}\r\n\t\tdefault: return state;\r\n\t}\r\n}\r\nexport const addNewMessageActionCreator = () => {\r\n\treturn { type: ADD_NEW_MESSAGE }\r\n}\r\n\r\nexport const updateNewMessageTextActionCreator = (text) => {\r\n\treturn {\r\n\t\ttype: UPDATE_NEW_MESSAGE_TEXT, newText: text\r\n\t}\r\n}\r\n\r\nexport default dialogsReducer;"]},"metadata":{},"sourceType":"module"}