{"ast":null,"code":"const FOLLOWED = 'FOLLOWED';\nconst UNFOLLOWED = 'UNFOLLOWED';\nconst SET_USERS = 'SET_USERS';\nlet initialState = {\n  users: [\n    /* { id: 1, fullName: 'Alex', followed: true, photoUrl: 'https://petapixel.com/assets/uploads/2013/03/The-Iphone-Portrait.jpg', status: 'I\\'m fine! Thanks! And you?', location: { city: 'Kyiv', country: 'Ukraine', } },\r\n    { id: 2, fullName: 'Andrey', followed: false, photoUrl: 'https://petapixel.com/assets/uploads/2013/03/The-Iphone-Portrait.jpg', status: 'Who is on duty today?', location: { city: 'Washington', country: 'USA', } },\r\n    { id: 3, fullName: 'Sherlock', followed: false, photoUrl: 'https://petapixel.com/assets/uploads/2013/03/The-Iphone-Portrait.jpg', status: 'The sun is shining. The weather is fine.', location: { city: 'London', country: 'England', } },\r\n    { id: 4, fullName: 'Sasha', followed: true, photoUrl: 'https://petapixel.com/assets/uploads/2013/03/The-Iphone-Portrait.jpg', status: 'dast is fantastish, yavol!', location: { city: 'Berlin', country: 'Germany', } }, */\n  ]\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOWED:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOWED:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: [...state.users, ...action.users]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followActionCreator = userId => {\n  return {\n    type: FOLLOWED,\n    userId\n  };\n};\nexport const unFollowActionCreator = userId => {\n  return {\n    type: UNFOLLOWED,\n    userId\n  };\n};\nexport const setUsersActionCreator = users => {\n  return {\n    type: SET_USERS,\n    users\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["D:/front-end/2021/education_react_redux/react-kabzda-1/src/redux/users_reducer.js"],"names":["FOLLOWED","UNFOLLOWED","SET_USERS","initialState","users","usersReducer","state","action","type","map","u","id","userId","followed","followActionCreator","unFollowActionCreator","setUsersActionCreator"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,UAAjB;AACA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,SAAS,GAAG,WAAlB;AAEA,IAAIC,YAAY,GAAG;AAClBC,EAAAA,KAAK,EAAE;AACN;AACF;AACA;AACA;AAJQ;AADW,CAAnB;;AASA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKR,QAAL;AACC,aAAO,EACN,GAAGM,KADG;AAENF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYK,GAAZ,CAAgBC,CAAC,IAAI;AAC3B,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AAC3B,mBAAO,EAAE,GAAGF,CAAL;AAAQG,cAAAA,QAAQ,EAAE;AAAlB,aAAP;AACA;;AACD,iBAAOH,CAAP;AACA,SALM;AAFD,OAAP;;AASD,SAAKT,UAAL;AACC,aAAO,EACN,GAAGK,KADG;AAENF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYK,GAAZ,CAAgBC,CAAC,IAAI;AAC3B,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AAC3B,mBAAO,EAAE,GAAGF,CAAL;AAAQG,cAAAA,QAAQ,EAAE;AAAlB,aAAP;AACA;;AACD,iBAAOH,CAAP;AACA,SALM;AAFD,OAAP;;AASD,SAAKR,SAAL;AACC,aAAO,EACN,GAAGI,KADG;AACIF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiB,GAAGG,MAAM,CAACH,KAA3B;AADX,OAAP;;AAGD;AAAS,aAAOE,KAAP;AAzBV;AA2BA,CA5BD;;AA8BA,OAAO,MAAMQ,mBAAmB,GAAIF,MAAD,IAAY;AAC9C,SAAO;AAAEJ,IAAAA,IAAI,EAAER,QAAR;AAAkBY,IAAAA;AAAlB,GAAP;AACA,CAFM;AAIP,OAAO,MAAMG,qBAAqB,GAAIH,MAAD,IAAY;AAChD,SAAO;AAAEJ,IAAAA,IAAI,EAAEP,UAAR;AAAoBW,IAAAA;AAApB,GAAP;AACA,CAFM;AAIP,OAAO,MAAMI,qBAAqB,GAAIZ,KAAD,IAAW;AAC/C,SAAO;AAAEI,IAAAA,IAAI,EAAEN,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AACA,CAFM;AAIP,eAAeC,YAAf","sourcesContent":["const FOLLOWED = 'FOLLOWED'\r\nconst UNFOLLOWED = 'UNFOLLOWED'\r\nconst SET_USERS = 'SET_USERS'\r\n\r\nlet initialState = {\r\n\tusers: [\r\n\t\t/* { id: 1, fullName: 'Alex', followed: true, photoUrl: 'https://petapixel.com/assets/uploads/2013/03/The-Iphone-Portrait.jpg', status: 'I\\'m fine! Thanks! And you?', location: { city: 'Kyiv', country: 'Ukraine', } },\r\n\t\t{ id: 2, fullName: 'Andrey', followed: false, photoUrl: 'https://petapixel.com/assets/uploads/2013/03/The-Iphone-Portrait.jpg', status: 'Who is on duty today?', location: { city: 'Washington', country: 'USA', } },\r\n\t\t{ id: 3, fullName: 'Sherlock', followed: false, photoUrl: 'https://petapixel.com/assets/uploads/2013/03/The-Iphone-Portrait.jpg', status: 'The sun is shining. The weather is fine.', location: { city: 'London', country: 'England', } },\r\n\t\t{ id: 4, fullName: 'Sasha', followed: true, photoUrl: 'https://petapixel.com/assets/uploads/2013/03/The-Iphone-Portrait.jpg', status: 'dast is fantastish, yavol!', location: { city: 'Berlin', country: 'Germany', } }, */\r\n\t],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase FOLLOWED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map(u => {\r\n\t\t\t\t\tif (u.id === action.userId) {\r\n\t\t\t\t\t\treturn { ...u, followed: true }\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn u\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\tcase UNFOLLOWED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map(u => {\r\n\t\t\t\t\tif (u.id === action.userId) {\r\n\t\t\t\t\t\treturn { ...u, followed: false }\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn u\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\tcase SET_USERS:\r\n\t\t\treturn {\r\n\t\t\t\t...state, users: [...state.users, ...action.users]\r\n\t\t\t}\r\n\t\tdefault: return state\r\n\t}\r\n}\r\n\r\nexport const followActionCreator = (userId) => {\r\n\treturn { type: FOLLOWED, userId }\r\n}\r\n\r\nexport const unFollowActionCreator = (userId) => {\r\n\treturn { type: UNFOLLOWED, userId }\r\n}\r\n\r\nexport const setUsersActionCreator = (users) => {\r\n\treturn { type: SET_USERS, users }\r\n}\r\n\r\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}